<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"               xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">
    <!--扫描文件-->
    <context:component-scan base-package="controller,serviceimpl,"/>
    <!--对静态资源不进行处理，例如js,css,jpg等等 -->
    <mvc:default-servlet-handler />

    <!-- 启动AspectJ自动代理 -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!--开启注解驱动-->
    <mvc:annotation-driven />

    <!--视图解析器,以下配置后，Controller最终返回该页面的前缀-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver"
          id="internalResourceViewResolver">
        <!-- 前缀 -->
        <property name="prefix" value="/WEB-INF/jsp/" />
        <!-- 后缀 -->
        <property name="suffix" value=".jsp" />
    </bean>

    <!--xml里指明切面类-->
    <bean id="myAs" class="aspect.OrderAspect"></bean>

     <!--aop:config标签用来配置有关切面的配置  -->
     <aop:config>
         <!-- 设置切点表达式 以便下面引用 -->
         <aop:pointcut expression="execution(* controller.ShopCartController.deleteProductNum(..))" id="cut"/>
         <!-- 配置切面所用的bean 和优先级 -->
         <aop:aspect ref="myAs" order="2" >
             <!-- 配置切面方法 -->
             <aop:before method="beforeCheck" pointcut-ref="cut"/>
             <aop:after method="afterCheck"  pointcut-ref="cut"/>
             <aop:after-returning method="afterReturn" pointcut-ref="cut" returning="res"/>
             <aop:after-throwing method="afterThrow" pointcut-ref="cut" throwing="ex"/>
             <aop:around method="around" pointcut-ref="cut"/>
         </aop:aspect>

     </aop:config>


    <!--配置拦截器-->
     <mvc:interceptors>
         <mvc:interceptor>
             <!--/*表示拦截所有请求,如果想拦截以某个名字(abc)结尾的请求path里写/*/abc,如果想拦截以某个名字(abc)开头的请求,path里写/abc/* -->
             <mvc:mapping path="/*" />
             <!-- 排除拦截的地址 -->
             <!--  <mvc:exclude-mapping path="/*/login"/> 不拦截login结尾的请求 -->
             <bean id="commonInterceptor" class="interceptor.MyInterceptor "></bean> <!--这个类就是我们自定义的Interceptor -->
         </mvc:interceptor>
         <!-- 当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法  -->
        <!-- <mvc:interceptor>
             <mvc:mapping path="/*" />
             <bean id="commonInterceptor2" class="interceptor.MyInterceptor2 "></bean> &lt;!&ndash;这个类就是我们自定义的Interceptor &ndash;&gt;
         </mvc:interceptor>-->
     </mvc:interceptors>

    <!--配置上传图片-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="defaultEncoding" value="UTF-8" />
        <!-- 指定所上传文件的总大小,单位字节。注意maxUploadSize属性的限制不是针对单个文件，而是所有文件的容量之和 -->
        <property name="maxUploadSize" value="10240000" />
        <property name="resolveLazily" value="true"/>

    </bean>

</beans>
